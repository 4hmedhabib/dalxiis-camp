// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  firstName   String
  lastName    String
  password    String
  // campgrounds
  campgrounds Campground[] @relation("UserToCampground")
  // reviews
  reviews     Review[]     @relation("UserToReview")
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
}

model Campground {
  id          Int                 @id @default(autoincrement())
  title       String
  location    String
  // geometry
  geometry    Geometry?           @relation("CampgroundToGeometry")
  // author
  author      User?               @relation("UserToCampground", fields: [authorId], references: [id])
  authorId    Int?
  // images
  images      Campground_Images[] @relation("CampgroundToImage")
  description String
  price       Int
  // reviews
  reviews     Review[]            @relation("CampgroundToReview")
  created_at  DateTime            @default(now())
  updated_at  DateTime            @updatedAt
}

model Geometry {
  id           Int          @id @default(autoincrement())
  lng          Decimal      @db.Decimal(10, 7)
  lat          Decimal      @db.Decimal(10, 7)
  campground   Campground   @relation("CampgroundToGeometry", fields: [campgroundId], references: [id])
  campgroundId Int          @unique
  type         GeometryType
}

model Campground_Images {
  id           Int         @id @default(autoincrement())
  url          String
  filename     String?
  // campground
  campground   Campground? @relation("CampgroundToImage", fields: [campgroundId], references: [id])
  campgroundId Int?
  created_At   DateTime    @default(now())
  updated_At   DateTime    @updatedAt
}

model Review {
  id           Int         @id @default(autoincrement())
  rating       Int
  body         String
  // campground
  campground   Campground? @relation("CampgroundToReview", fields: [campgroundId], references: [id])
  campgroundId Int?
  // author
  author       User?       @relation("UserToReview", fields: [authorId], references: [id])
  authorId     Int?
  created_At   DateTime    @default(now())
  updated_At   DateTime    @updatedAt
}

enum GeometryType {
  Point
}
